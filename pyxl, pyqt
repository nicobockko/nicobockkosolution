# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '0831testscrollbar.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PySide2 import QtCore, QtGui, QtWidgets
from PySide2.QtWidgets import QListView, QMessageBox
from PySide2.QtGui import QStandardItemModel
from PySide2.QtGui import QStandardItem
from PySide2.QtGui import QPixmap

from pandas import read_csv
from openpyxl import load_workbook
import datetime


def show_msgbox(msg):
    myicon = QPixmap()
    myicon.load("C:/test_mqtt/icon.png")
  
    error_dlg = QMessageBox()
    error_dlg.setText(msg)
    error_dlg.setWindowTitle('에러^^')
    error_dlg.setWindowIcon(myicon)
    error_dlg.setIconPixmap(myicon)
    error_dlg.exec()


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(930, 642)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.rawpocket45p = AAAbutton(self.centralwidget)
        self.rawpocket45p.setGeometry(QtCore.QRect(20, 20, 256, 221))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.rawpocket45p.setFont(font)
        self.rawpocket45p.setObjectName("rawpocket45p")
        self.cellid1 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid1.setEnabled(True)

        self.cellid1.setGeometry(QtCore.QRect(300, 20, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid1.setFont(font)
        self.cellid1.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid1.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid1.setObjectName("cellid1")
        self.cellid1.setTabChangesFocus(True)


        self.motherpocket = AAAbutton(self.centralwidget)
        self.motherpocket.setGeometry(QtCore.QRect(20, 330, 251, 111))
        self.motherpocket.setObjectName("motherpocket")
        self.btn_shoot = QtWidgets.QPushButton(self.centralwidget)
        self.btn_shoot.setGeometry(QtCore.QRect(370, 530, 171, 71))
        self.btn_shoot.setObjectName("btn_shoot")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 230, 201, 41))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(40, 430, 171, 41))
        self.label_2.setObjectName("label_2")
        self.cellid2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid2.setGeometry(QtCore.QRect(300, 40, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid2.setFont(font)
        self.cellid2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid2.setObjectName("cellid2")
        self.centralwidget.setTabOrder(self.cellid1, self.cellid2)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(280, 20, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(280, 40, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(280, 60, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(280, 80, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(280, 200, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(280, 100, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(280, 120, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(280, 140, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(280, 160, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(280, 180, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(50, 760, 171, 41))
        self.label_13.setText("")
        self.label_13.setObjectName("label_13")
        self.cellid3 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid3.setGeometry(QtCore.QRect(300, 60, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid3.setFont(font)
        self.cellid3.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid3.setObjectName("cellid3")
        self.cellid4 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid4.setGeometry(QtCore.QRect(300, 80, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid4.setFont(font)
        self.cellid4.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid4.setObjectName("cellid4")
        self.cellid5 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid5.setGeometry(QtCore.QRect(300, 100, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid5.setFont(font)
        self.cellid5.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid5.setObjectName("cellid5")
        self.cellid6 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid6.setGeometry(QtCore.QRect(300, 120, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid6.setFont(font)
        self.cellid6.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid6.setObjectName("cellid6")
        self.cellid7 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid7.setGeometry(QtCore.QRect(300, 140, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid7.setFont(font)
        self.cellid7.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid7.setObjectName("cellid7")
        self.cellid8 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid8.setGeometry(QtCore.QRect(300, 160, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid8.setFont(font)
        self.cellid8.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid8.setObjectName("cellid8")
        self.cellid9 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid9.setGeometry(QtCore.QRect(300, 180, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid9.setFont(font)
        self.cellid9.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid9.setObjectName("cellid9")
        self.cellid10 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid10.setGeometry(QtCore.QRect(300, 200, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid10.setFont(font)
        self.cellid10.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid10.setObjectName("cellid10")

        myicon = QPixmap()
        myicon.load("C:/test_mqtt/icon.png")

        self.lablepic = QtWidgets.QLabel(self.centralwidget)
        self.lablepic.setGeometry(QtCore.QRect(670, 480, myicon.width(), myicon.height()))
        self.lablepic.setPixmap(myicon)


        #self.lablepic.setText('aba')
        #self.lablepic.setObjectName("lablepic")

        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(670, 430, 221, 41))
        self.label_14.setObjectName("label_14")



        self.cellid1_11 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid1_11.setGeometry(QtCore.QRect(290, 300, 151, 41))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid1_11.setFont(font)
        self.cellid1_11.setObjectName("cellid1_11")
        self.cellid1_12 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid1_12.setGeometry(QtCore.QRect(290, 380, 151, 41))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid1_12.setFont(font)
        self.cellid1_12.setObjectName("cellid1_12")
        self.cellid1_13 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid1_13.setGeometry(QtCore.QRect(380, 460, 151, 41))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid1_13.setFont(font)
        self.cellid1_13.setObjectName("cellid1_13")
        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(290, 280, 131, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(290, 360, 161, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.reflectpocket = AAAbutton(self.centralwidget)
        self.reflectpocket.setGeometry(QtCore.QRect(660, 330, 241, 111))
        self.reflectpocket.setObjectName("reflectpocket")
        self.label_17 = QtWidgets.QLabel(self.centralwidget)
        self.label_17.setGeometry(QtCore.QRect(670, 230, 221, 41))
        self.label_17.setObjectName("label_17")
        self.elvddpocket = AAAbutton(self.centralwidget)
        self.elvddpocket.setGeometry(QtCore.QRect(650, 20, 256, 221))
        self.elvddpocket.setObjectName("elvddpocket")
        self.label_28 = QtWidgets.QLabel(self.centralwidget)
        self.label_28.setGeometry(QtCore.QRect(380, 440, 161, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_28.setFont(font)
        self.label_28.setObjectName("label_28")
        self.cellid10_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid10_2.setGeometry(QtCore.QRect(470, 200, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid10_2.setFont(font)
        self.cellid10_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid10_2.setObjectName("cellid10_2")
        self.cellid1_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid1_2.setEnabled(True)

        self.cellid1_2.setGeometry(QtCore.QRect(470, 20, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid1_2.setFont(font)
        self.cellid1_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid1_2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid1_2.setObjectName("cellid1_2")
        self.cellid8_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid8_2.setGeometry(QtCore.QRect(470, 160, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid8_2.setFont(font)
        self.cellid8_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid8_2.setObjectName("cellid8_2")
        self.cellid4_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid4_2.setGeometry(QtCore.QRect(470, 80, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid4_2.setFont(font)
        self.cellid4_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid4_2.setObjectName("cellid4_2")
        self.cellid7_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid7_2.setGeometry(QtCore.QRect(470, 140, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid7_2.setFont(font)
        self.cellid7_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid7_2.setObjectName("cellid7_2")
        self.cellid5_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid5_2.setGeometry(QtCore.QRect(470, 100, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid5_2.setFont(font)
        self.cellid5_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid5_2.setObjectName("cellid5_2")
        self.cellid2_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid2_2.setGeometry(QtCore.QRect(470, 40, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid2_2.setFont(font)
        self.cellid2_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid2_2.setObjectName("cellid2_2")
        self.cellid6_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid6_2.setGeometry(QtCore.QRect(470, 120, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid6_2.setFont(font)
        self.cellid6_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid6_2.setObjectName("cellid6_2")
        self.cellid9_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid9_2.setGeometry(QtCore.QRect(470, 180, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid9_2.setFont(font)
        self.cellid9_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid9_2.setObjectName("cellid9_2")
        self.cellid3_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid3_2.setGeometry(QtCore.QRect(470, 60, 151, 16))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid3_2.setFont(font)
        self.cellid3_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.cellid3_2.setObjectName("cellid3_2")
        self.label_18 = QtWidgets.QLabel(self.centralwidget)
        self.label_18.setGeometry(QtCore.QRect(630, 180, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_18.setFont(font)
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.centralwidget)
        self.label_19.setGeometry(QtCore.QRect(630, 200, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_19.setFont(font)
        self.label_19.setObjectName("label_19")
        self.label_20 = QtWidgets.QLabel(self.centralwidget)
        self.label_20.setGeometry(QtCore.QRect(630, 20, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_20.setFont(font)
        self.label_20.setObjectName("label_20")
        self.label_21 = QtWidgets.QLabel(self.centralwidget)
        self.label_21.setGeometry(QtCore.QRect(630, 100, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_21.setFont(font)
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.centralwidget)
        self.label_22.setGeometry(QtCore.QRect(630, 120, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_22.setFont(font)
        self.label_22.setObjectName("label_22")
        self.label_23 = QtWidgets.QLabel(self.centralwidget)
        self.label_23.setGeometry(QtCore.QRect(630, 160, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_23.setFont(font)
        self.label_23.setObjectName("label_23")
        self.label_24 = QtWidgets.QLabel(self.centralwidget)
        self.label_24.setGeometry(QtCore.QRect(630, 40, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_24.setFont(font)
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(self.centralwidget)
        self.label_25.setGeometry(QtCore.QRect(630, 60, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_25.setFont(font)
        self.label_25.setObjectName("label_25")
        self.label_26 = QtWidgets.QLabel(self.centralwidget)
        self.label_26.setGeometry(QtCore.QRect(630, 80, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_26.setFont(font)
        self.label_26.setObjectName("label_26")
        self.label_27 = QtWidgets.QLabel(self.centralwidget)
        self.label_27.setGeometry(QtCore.QRect(630, 140, 31, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_27.setFont(font)
        self.label_27.setObjectName("label_27")
        self.label_29 = QtWidgets.QLabel(self.centralwidget)
        self.label_29.setGeometry(QtCore.QRect(480, 360, 161, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_29.setFont(font)
        self.label_29.setObjectName("label_29")
        self.cellid1_14 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid1_14.setGeometry(QtCore.QRect(480, 300, 151, 41))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid1_14.setFont(font)
        self.cellid1_14.setObjectName("cellid1_14")
        self.cellid1_15 = QtWidgets.QTextEdit(self.centralwidget)
        self.cellid1_15.setGeometry(QtCore.QRect(480, 380, 151, 41))
        font = QtGui.QFont()
        font.setFamily("굴림")
        font.setPointSize(8)
        self.cellid1_15.setFont(font)
        self.cellid1_15.setObjectName("cellid1_15")
        self.label_30 = QtWidgets.QLabel(self.centralwidget)
        self.label_30.setGeometry(QtCore.QRect(480, 280, 131, 16))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        self.label_30.setFont(font)
        self.label_30.setObjectName("label_30")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 930, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.btn_shoot.clicked.connect(self.makethefile)
        self.cellid1.textChanged.connect(self.getid1)
        self.cellid2.textChanged.connect(self.getid2)
        self.cellid3.textChanged.connect(self.getid3)
        self.cellid4.textChanged.connect(self.getid4)
        self.cellid5.textChanged.connect(self.getid5)
        self.cellid6.textChanged.connect(self.getid6)
        self.cellid7.textChanged.connect(self.getid7)
        self.cellid8.textChanged.connect(self.getid8)
        self.cellid9.textChanged.connect(self.getid9)
        self.cellid10.textChanged.connect(self.getid10)

        self.cellid1_2.textChanged.connect(self.getid1_)
        self.cellid2_2.textChanged.connect(self.getid2_)
        self.cellid3_2.textChanged.connect(self.getid3_)
        self.cellid4_2.textChanged.connect(self.getid4_)
        self.cellid5_2.textChanged.connect(self.getid5_)
        self.cellid6_2.textChanged.connect(self.getid6_)
        self.cellid7_2.textChanged.connect(self.getid7_)
        self.cellid8_2.textChanged.connect(self.getid8_)
        self.cellid9_2.textChanged.connect(self.getid9_)
        self.cellid10_2.textChanged.connect(self.getid10_)





        self.cellid1_11.textChanged.connect(self.who)
        self.cellid1_12.textChanged.connect(self.when)
        self.cellid1_13.textChanged.connect(self.rqid)
        self.cellid1_14.textChanged.connect(self.who_)
        self.cellid1_15.textChanged.connect(self.when_)
        self.cellid2.setText('gbc')
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "휘도데이터취합기 By Nicobockko Solution"))
        self.cellid1.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n""<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n""p, li { white-space: pre-wrap; }\n""</style></head><body style=\" font-family:\'굴림\'; font-size:8pt; font-weight:400; font-style:normal;\">\n""<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.btn_shoot.setText(_translate("MainWindow", "Shoot!"))
        self.label.setText(_translate("MainWindow", "35p 휘도 Data 넣으세요(확장자 csv)"))
        self.label_2.setText(_translate("MainWindow", "모파일 넣으세요(확장자.xlsx)"))
        self.label_3.setText(_translate("MainWindow", "1"))
        self.label_4.setText(_translate("MainWindow", "2"))
        self.label_5.setText(_translate("MainWindow", "3"))
        self.label_6.setText(_translate("MainWindow", "4"))
        self.label_7.setText(_translate("MainWindow", "10"))
        self.label_8.setText(_translate("MainWindow", "5"))
        self.label_9.setText(_translate("MainWindow", "6"))
        self.label_10.setText(_translate("MainWindow", "7"))
        self.label_11.setText(_translate("MainWindow", "8"))
        self.label_12.setText(_translate("MainWindow", "9"))
        self.label_14.setText(_translate("MainWindow", "반사율 Data  넣으세요(확장자 csv)"))
        self.label_15.setText(_translate("MainWindow", "측정자:"))
        self.label_16.setText(_translate("MainWindow", "R/O(예시: 초기(월/일)"))
        self.label_17.setText(_translate("MainWindow", "VDD가변 Data 넣으세요(확장자 csv)"))
        self.label_28.setText(_translate("MainWindow", "의뢰번호(초기에만)"))
        self.cellid1_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n""<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n""p, li { white-space: pre-wrap; }\n""</style></head><body style=\" font-family:\'굴림\'; font-size:8pt; font-weight:400; font-style:normal;\">\n""<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label_18.setText(_translate("MainWindow", "9"))
        self.label_19.setText(_translate("MainWindow", "10"))
        self.label_20.setText(_translate("MainWindow", "1"))
        self.label_21.setText(_translate("MainWindow", "5"))
        self.label_22.setText(_translate("MainWindow", "6"))
        self.label_23.setText(_translate("MainWindow", "8"))
        self.label_24.setText(_translate("MainWindow", "2"))
        self.label_25.setText(_translate("MainWindow", "3"))
        self.label_26.setText(_translate("MainWindow", "4"))
        self.label_27.setText(_translate("MainWindow", "7"))
        self.label_29.setText(_translate("MainWindow", "R/O(예시: 초기(월/일)"))
        self.label_30.setText(_translate("MainWindow", "측정자:"))

        #self.lablepic.setText(_translate("MainWindow",'abc'))

    def makethefile(self):


#        self.wb = openpyxl.load_workbook(ui.motherpocket.hi4[0])
        self.wb = load_workbook(ui.motherpocket.hi4[0])
        self.sheetlist = self.wb.sheetnames
        print(self.sheetlist)
        self.cellids = []

        self.xdata = []
        self.ydata = []
        self.ldata = []

        self.xdata_ = []
        self.ydata_ = []
        self.ldata_ = []

        if 'FORM' in self.sheetlist:
            self.wsdata = self.wb.active

            for i in range(len(ui.rawpocket45p.hi4)):
                self.cellids.append(eval('self.celldi%s' % (i + 1)))


            for i in range(len(ui.rawpocket45p.hi4)):
                locals()['ws%s' % (i + 1)] = self.wb.copy_worksheet(self.wsdata)

                eval('ws%s' % (i + 1)).title = eval('self.celldi%s' % (i + 1))
                print(eval('ws%s' % (i + 1)).title)
                print('ws%s' % (i + 1))

                locals()['csv%s' % (i + 1)] = read_csv(ui.rawpocket45p.hi4[i], skiprows=1)
                locals()['csv2%s' % (i + 1)] = read_csv(ui.elvddpocket.hi4[i], skiprows=1)

                if not 'No.' in eval('csv%s' %(i+1)).columns:
                    locals()['csv%s' % (i + 1)] = read_csv(ui.rawpocket45p.hi4[i],encoding = 'ISO-8859-1')

                    # if len(eval('csv%s' % (i + 1)).columns.values) < 7:
                    #     print('error')
                    #     return
                    # eval('csv%s' %(i+1)).columns.values[6]='Lv'

                    try:
                        eval('csv%s' % (i + 1)).columns.values[6] = 'Lv'
                    except IndexError:
                        # error_dlg = QMessageBox()
                        # error_dlg.setText('Error : Make sure colums len!!!!')
                        # error_dlg.exec()
                        show_msgbox('Error : Make sure colums len!!!!')
                        return

                if not 'No.' in eval('csv2%s.columns' % (i + 1)):
                    locals()['csv2%s' % (i + 1)] = read_csv(ui.elvddpocket.hi4[i],encoding = 'ISO-8859-1')
                    #eval('csv2%s' % (i + 1)).rename({'Lv(cd/m²)': 'Lv'})
                    eval('csv2%s' % (i + 1)).columns.values[6] = 'Lv'


                self.xdata1 = locals()['csv%s' % (i + 1)].x
                self.xdata = self.xdata1.tolist()
                self.ydata1 = locals()['csv%s' % (i + 1)].y
                self.ydata = self.ydata1.tolist()
                self.ldata1 = locals()['csv%s' % (i + 1)].Lv
                self.ldata = self.ldata1.tolist()
                self.dataset = [self.xdata, self.ydata, self.ldata]

                self.xdata_1 = locals()['csv2%s' % (i + 1)].x
                self.xdata_ = self.xdata_1.tolist()
                self.ydata_1 = locals()['csv2%s' % (i + 1)].y
                self.ydata_ = self.ydata_1.tolist()
                self.ldata_1 = locals()['csv2%s' % (i + 1)].Lv
                self.ldata_ = self.ldata_1.tolist()
                self.dataset_ = [self.xdata_, self.ydata_, self.ldata_]

                eval('ws%s' % (i + 1)).cell(row=1, column=4).value = self.who
                eval('ws%s' % (i + 1)).cell(row=2, column=4).value = self.when
                eval('ws%s' % (i + 1)).cell(row=40, column=4).value = self.who
                eval('ws%s' % (i + 1)).cell(row=41, column=4).value = self.when

                eval('ws%s' % (i + 1)).cell(row=1, column=1).value = self.rqid
                eval('ws%s' % (i + 1)).cell(row=40, column=1).value = self.rqid


                for datacolumns in self.dataset:
                    for data, k in zip(datacolumns, range(len(datacolumns))):
                        eval('ws%s' % (i + 1)).cell(row=k + 4, column=self.dataset.index(datacolumns) + 4).value = data
                        print(data)

                for datacolumns in self.dataset_:
                    for data, k in zip(datacolumns, range(len(datacolumns))):
                        eval('ws%s' % (i + 1)).cell(row=k + 43, column=self.dataset_.index(datacolumns) + 4).value = data
                        print(data)





        else:
            self.wsdata = self.wb.active
            self.cellids = []
            self.cellids_=[]

            for q in range(len(ui.rawpocket45p.hi4)):
                self.cellids.append(eval('self.celldi%s' % (q + 1)))

            for q in range(len(ui.elvddpocket.hi4)):
                self.cellids_.append(eval('self.celldi%s_' % (q + 1)))

            for i in range(len(self.cellids_)):

                locals()['ws2%s' % (i + 1)] = self.wb[self.cellids_[i]]

                locals()['csv2%s' % (i + 1)] = read_csv(ui.elvddpocket.hi4[i], skiprows=1)
                if not 'No.' in eval('csv2%s.columns' % (i + 1)):
                    locals()['csv2%s' % (i + 1)] = read_csv(ui.elvddpocket.hi4[i],encoding = 'ISO-8859-1')
                    #eval('csv2%s' % (i + 1)).rename({'Lv(cd/m²)': 'Lv'})
                    eval('csv2%s' % (i + 1)).columns.values[6] = 'Lv'


                self.xdata_1 = locals()['csv2%s' % (i + 1)].x
                self.xdata_ = self.xdata_1.tolist()
                self.ydata_1 = locals()['csv2%s' % (i + 1)].y
                self.ydata_ = self.ydata_1.tolist()
                self.ldata_1 = locals()['csv2%s' % (i + 1)].Lv
                self.ldata_ = self.ldata_1.tolist()
                self.dataset_ = [self.xdata_, self.ydata_, self.ldata_]
                self.getnumdata_= []
                self.row_ = locals()['ws2%s' % (i + 1)]['45']
                for cell in self.row_:
                    self.getnumdata_.append(cell.value)

                self.nextcellnum_ = (len(self.getnumdata_)) - [i != None for i in list(reversed(self.getnumdata_))].index(True)

                eval('ws2%s' % (i + 1)).cell(row=40, column=self.nextcellnum_ + 1).value = self.who_
                eval('ws2%s' % (i + 1)).cell(row=41, column=self.nextcellnum_ + 1).value = self.when_

                for datacolumns in self.dataset_:
                    for data, k in zip(datacolumns, range(len(datacolumns))):
                        eval('ws2%s' % (i + 1)).cell(row=k + 43, column=self.dataset_.index(datacolumns) + self.nextcellnum_ + 1).value = data




            for i in range(len(self.cellids)):
                locals()['ws%s' % (i + 1)] = self.wb[self.cellids[i]]
                locals()['csv%s' % (i + 1)] = read_csv(ui.rawpocket45p.hi4[i], skiprows=1)
                if not 'No.' in eval('csv%s' %(i+1)).columns:
                    locals()['csv%s' % (i + 1)] = read_csv(ui.rawpocket45p.hi4[i],encoding = 'ISO-8859-1')
                    eval('csv%s' %(i+1)).columns.values[6]='Lv'


                print('csv%s' % (i + 1))
                print(ui.rawpocket45p.hi4[i])
                self.xdata1 = locals()['csv%s' % (i + 1)].x
                self.xdata = self.xdata1.tolist()
                self.ydata1 = locals()['csv%s' % (i + 1)].y
                self.ydata = self.ydata1.tolist()
                self.ldata1 = locals()['csv%s' % (i + 1)].Lv
                self.ldata = self.ldata1.tolist()
                self.dataset = [self.xdata, self.ydata, self.ldata]


                # print(self.dataset)
                self.getnumdata = []
                self.row = locals()['ws%s' % (i + 1)]['6']




                for cell in self.row:
                    self.getnumdata.append(cell.value)

                self.nextcellnum =(len(self.getnumdata)) - [i!=None for i in list(reversed(self.getnumdata))].index(True)

                eval('ws%s' % (i + 1)).cell(row=1, column=self.nextcellnum + 1 ).value = self.who
                eval('ws%s' % (i + 1)).cell(row=2, column=self.nextcellnum + 1).value = self.when


                for datacolumns in self.dataset:
                    for data, k in zip(datacolumns, range(len(datacolumns))):
                        eval('ws%s' % (i + 1)).cell(row=k + 4, column=self.dataset.index(datacolumns) + self.nextcellnum + 1 ).value = data




        if 'FORM' in self.sheetlist:
            self.wb.remove(self.wb['FORM'])

        dt = datetime.datetime.now()
        self.filename = 'C:/Private_Documents/'+self.rqid + '_'+ dt.strftime("%Y%m%d_%H%M%S")+'.xlsx'
        self.motherfilename = []
        self.wb.save(self.filename)


    # 드래그해서들어간변수 서로 막옮기기?
    # 에러처리? 만약 csv나 xl파일 확장자 안맞는거 엉뚱한거넣을떄,
    # 담은 파일겟수와 입력한 cell id 갯수가 일치하지않을때
    # 최초로 파일만들때, 의뢰번호, 평가항목, 측정자, 측정시간 초기or HR 써넣고 cell 4B열에도 담기게 만들고
    #입력파일 갯수대로 파일명 블록처리
    # 모파일 만들땐 cellid는 아무거나라도 입력해야댐;;의뢰번호 평가항목 은 안써도되지만 측정자 측정시간 은 기입하도록하고 파일명만순서에 맞게 잘 해줘야함
    # 드랍된셀 발생했을땐 어떻게처리하지;;?
    # 만약에 여기 id썻다 지우면 ?변수로 자리 잡아먹고있나?
    # ELVDD측정데이터는,,?
    # 데이터 추가시에 모파일 에있는 셀중 반절은 데이터 안넣을거라던데...
    # 추가할때도 셀아이디 입력하게시켜야겠다;
    #ELVDD데이터만 있거나 휘도데이터만 있거나 할수도...

    def getid1(self):
        self.celldi1 = self.cellid1.toPlainText()

    def getid2(self):
        self.celldi2 = self.cellid2.toPlainText()

    def getid3(self):
        self.celldi3 = self.cellid3.toPlainText()

    def getid4(self):
        self.celldi4 = self.cellid4.toPlainText()

    def getid5(self):
        self.celldi5 = self.cellid5.toPlainText()

    def getid6(self):
        self.celldi6 = self.cellid6.toPlainText()

    def getid7(self):
        self.celldi7 = self.cellid7.toPlainText()

    def getid8(self):
        self.celldi8 = self.cellid8.toPlainText()

    def getid9(self):
        self.celldi9 = self.cellid9.toPlainText()

    def getid10(self):
        self.celldi10 = self.cellid10.toPlainText()



    def getid1_(self):
        self.celldi1_ = self.cellid1_2.toPlainText()

    def getid2_(self):
        self.celldi2_ = self.cellid2_2.toPlainText()

    def getid3_(self):
        self.celldi3_ = self.cellid3_2.toPlainText()

    def getid4_(self):
        self.celldi4_ = self.cellid4_2.toPlainText()

    def getid5_(self):
        self.celldi5_ = self.cellid5_2.toPlainText()

    def getid6_(self):
        self.celldi6_ = self.cellid6_2.toPlainText()

    def getid7_(self):
        self.celldi7_ = self.cellid7_2.toPlainText()

    def getid8_(self):
        self.celldi8_ = self.cellid8_2.toPlainText()

    def getid9_(self):
        self.celldi9_ = self.cellid9_2.toPlainText()

    def getid10_(self):
        self.celldi10_ = self.cellid10_2.toPlainText()




    def who(self):
        self.who = self.cellid1_11.toPlainText()
        print(self.who)

    def who_(self):
        self.who_ = self.cellid1_14.toPlainText()

    def when(self):
        self.when = self.cellid1_12.toPlainText()

    def when_(self):
        self.when_ = self.cellid1_15.toPlainText()

    def rqid(self):
        self.rqid = self.cellid1_13.toPlainText()



class AAAbutton(QListView):

    def __init__(self, title):
        super().__init__(title)
        self.setAcceptDrops(True)
        self.hi = []
        self.hi4 = []

    def dragEnterEvent(self, e):
        e.acceptProposedAction()

    def dragMoveEvent(self, e):
        e.acceptProposedAction()

    def dropEvent(self, e):
        self.hi = e.mimeData().text()
        self.hi = self.hi.replace('file:///', '')
        self.hi4 = self.hi.split("\n")

        model = QStandardItemModel()
        for i in self.hi4:
            model.appendRow(QStandardItem(i))
        self.setModel(model)
        self.hi4 = list(filter(None, self.hi4))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()

    show_msgbox('test')

    sys.exit(app.exec_())
