# //7자리 수가 주어졌을 때, 숫자들을 최소로 이동하여 차이 K 를 만드는 수를 찾아라.
# //숫자들을 이동할 때는 인접한 두 숫자를 함께 이동시킨다.
# //만들어진 수를 두 부분으로 나누어 앞의 수를 A, 뒤의 수를 B 라고 했을 때, A 에서 B 를 뺀 값이 K 인 수를 만들어야 한다.
# //
# //3219846 이라는 7자리 수가 주어지고, K = 8826 인 예를 들어보자.
# //
# //3219846 (21 이동)
# //3984216 (98 이동)
# //9834216 (16 이동)
# //9168342
# //9168 - 342 = 8826
# //
# //최소 3번의 이동으로 9168342 라는 수를 만들 수 있다.
# //A = 9168, B = 342 이므로, K = 8826 을 만족함을 알 수 있다.
# //이 때, 최소 이동 횟수는 3회이고, 이를 만족하는 수는 9168342 이다.
# //7자리 수와 K를 입력 받아 차이를 K로 만드는 수와 이를 만들기 위한 최소 이동 횟수를 출력하라.
# //
# //[제한사항]
# //1. 주어지는 7자리 수는 1부터 9까지의 서로 다른 7개의 숫자로 이루어져 있다.
# //2. 최소 이동으로 A ? B = K 를 만족하는 수가 여러 개인 경우 A 가 더 큰 값을 출력한다.
# //3. K는 항상 양의 정수이며 K를 만들 수 없는 경우는 입력으로 주어지지 않는다.
# //
# //[입력]
# //맨 처음 테스트 케이스의 개수 T가 주어지며 그 다음 T개의 테스트 케이스가 주어진다.
# //각 테스트 케이스는 7 자리 수와 K 가 공백을 두고 주어진다.
# //
# //[출력]
# //테스트 케이스 하나 당 한 줄씩 출력한다.맨 처음 #x(x 는 테스트케이스 번호, 1부터 시작)을 출력하고 공백을 하나 둔 후,
# //조건을 만족하는 수를 만들기 위한 최소 이동 횟수와 차이 K를 만드는 수를 출력하라.
# //
# //
# //[입출력 예]
# //(입력)
# //3
# //3219846 8826
# //7631582 38646
# //6781543 615429
# //
# //(출력)
# //#1 3 9168342
# //#2 4 3867125
# //#3 1 6154378


import sys
from collections import deque

def move(num,s,e): # 자리옮기기
    global buff, visited,A
    a=list(str(num))
    buf= a[s]+a[s+1]
    del a[s:s+2]
    a.insert(e,buf)
    buff="".join(a)
    return int(buff)

def judge(num): # 뻴셈 수행해버리기
    global tt
    a=list(str(num))
    num1="".join(a[0:tt+1])
    num2="".join(a[tt+1:])
    return int(num1) - int(num2)

T = int(input())
for _ in range(T):
    cnt = 999999
    sol = 0
    A ,B = map(int,sys.stdin.readline().split())

    k=B
    tt=0
    while k//10: #맞춰야되는 숫자 몇자리수인지 파악하기
        k//=10
        tt+=1

    visited = [0] * (9999999 + 10)  #확인해봤던 숫자인지 체크하기위한 배열
    q=deque()
    q.append((A,0,0,0)) #(A s,e,cnt)

    while q:
        get = q.popleft()
        aa=move(int(get[0]),get[1],get[2]) # 꺼내서 이동시키고

        if visited[aa] : continue #이동시킨숫자 방문한적있으면 넘어가고
        visited[aa]=1  ##
        if judge(aa) == B : #이동시킨숫자 판정하고
            if int(get[3])<cnt:
                cnt = int(get[3])
                sol= aa
            elif int(get[3])== cnt and int(get[0])>sol : sol= int(get[0])
            continue


        for i in range(6):
            for j in range(6):
                if i == j: continue
                q.append((aa,i,j, (int(get[3]) + 1)))

    print("# %d %d %d" % ( _+1,cnt,sol))



